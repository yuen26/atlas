<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.atlas.framework.persistence.mybatis.product.mapper.OrderMapper">

	<resultMap id="OrderResultMap" type="org.atlas.business.order.domain.entity.Order">
		<id property="id" column="id"/>
		<result property="customerId" column="customer_id"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<collection property="orderItems" ofType="org.atlas.business.order.domain.entity.OrderItem"
					column="id" select="selectOrderItemsByOrderId"/>
	</resultMap>

	<resultMap id="OrderItemResultMap" type="org.atlas.business.order.domain.entity.OrderItem">
		<result property="productId" column="product_id"/>
		<result property="productPrice" column="product_price"/>
		<result property="quantity" column="quantity"/>
	</resultMap>

	<select id="find" parameterType="map" resultMap="OrderResultMap">
		SELECT o.*
		FROM orders o
		<include refid="searchWhereClause"/>
		<if test="condition.sort != null and condition.sort != ''">
			ORDER BY #{condition.sortBy} #{condition.sortOrder}
		</if>
		<if test="condition.limit != null and condition.offset != null">
			LIMIT #{condition.limit}
			OFFSET #{condition.offset}
		</if>
	</select>

	<select id="selectOrderItemsByOrderId" resultMap="OrderItemResultMap">
		SELECT oi.order_id, oi.product_id, oi.product_price, oi.quantity
		FROM order_item oi
		WHERE oi.order_id = #{id}
	</select>

	<select id="count" parameterType="map" resultType="long">
		SELECT COUNT(o.id)
		FROM orders o
		<include refid="searchWhereClause"/>
	</select>

	<select id="findById" resultMap="OrderResultMap">
		SELECT o.*
		FROM orders o
		WHERE o.id = #{id}
	</select>

	<insert id="insertOrder" parameterType="org.atlas.business.order.domain.entity.Order"
					useGeneratedKeys="true" keyProperty="id">
		INSERT INTO orders (customer_id, amount, address, status)
		VALUES (#{customerId}, #{amount}, #{address}, #{status})
	</insert>

	<insert id="insertOrderItem" parameterType="org.atlas.business.order.domain.entity.OrderItem"
					useGeneratedKeys="true" keyProperty="id">
		INSERT INTO order_item (order_id, product_id, product_price, quantity)
		VALUES (#{order.id}, #{productId}, #{productPrice}, #{quantity})
	</insert>

	<update id="update" parameterType="org.atlas.business.order.domain.entity.Order">
		UPDATE orders o
		SET
		<if test="status != null">
			o.status = #{status},
		</if>
		<if test="address != null">
			o.address = #{address}
		</if>
		WHERE o.id = #{id}
	</update>

	<delete id="deleteById">
		DELETE
		FROM orders o
		WHERE o.id = #{id}
	</delete>

	<select id="findByStatusAndCreatedAtBefore" resultMap="OrderResultMap">
		SELECT o.*
		FROM orders o
		WHERE o.status = #{status}
		  AND o.created_at &lt; #{date}
	</select>

	<sql id="searchWhereClause">
		<where>
			<if test="condition.id != null">
				AND o.id = #{condition.id}
			</if>
			<if test="condition.customerId != null">
				AND o.customer_id = #{condition.customerId}
			</if>
			<if test="condition.minAmount != null">
				AND o.amount >= #{condition.minAmount}
			</if>
			<if test="condition.maxAmount != null">
				AND o.amount &lt;= #{condition.maxAmount}
			</if>
			<if test="condition.address != null and condition.address != ''">
				AND LOWER(o.address) LIKE CONCAT('%', LOWER(#{condition.address}), '%')
			</if>
			<if test="condition.status != null">
				AND o.status = #{condition.status}
			</if>
			<if test="condition.startCreatedAt != null">
				AND o.created_at >= #{condition.startCreatedAt}
			</if>
			<if test="condition.endCreatedAt != null">
				AND o.created_at &lt;= #{condition.endCreatedAt}
			</if>
		</where>
	</sql>
</mapper>
