eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka}

grpc:
  server:
    port: 50052

management:
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  health:
    mail:
      # Turn off health check mail server
      enabled: false
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}
      connect-timeout: 30s
      read-timeout: 10s
  tracing:
    sampling:
      # 1.0 represents 100%, meaning all requests will be traced.
      probability: 1.0

server:
  port: 8082

spring:
  application:
    name: product-service
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      password: ${REDIS_PASSWORD:123456}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL:jdbc:mysql://localhost:3306/product?useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&useSSL=false}
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:root}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

springdoc:
  packages-to-scan: org.atlas.framework.rest.server.product.controller

app:
  event:
    kafka:
      consumer:
        topics: reserve_quantity_request,order_created,reserve_credit_failed
  outbox:
    enabled: true
